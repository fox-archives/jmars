package edu.asu.jmars;

import edu.asu.jmars.util.Config;
import edu.asu.jmars.util.DebugLog;
import edu.asu.jmars.util.Util;
import edu.stanford.ejalbert.BrowserLauncher;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import java.awt.*;
import java.awt.event.*;
import java.net.URL;

public class LoginWindow extends JFrame {
    private JLabel logoLabel;
    private JLabel versionLabel;
    private JTextField usernameField;
    private JCheckBox restoreAutoSaveCheckBox;
    private JTextPane guestBlurbPane;
    private JPasswordField passwordField;
    private JButton cancelButton;
    private JButton loginButton;
    private JButton continueButton;
    private JLabel homepageLabel;
    private JLabel registerLabel;

    private AuthenticationStrategy guestAuthenticationStrategy, userAuthenticationStrategy;

    LoginWindow() {
        $$$setupUI$$$();
        continueButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean permitted = guestAuthenticationStrategy.authenticate(null, null);
                if (!permitted) {
                    guestAuthenticationStrategy.onFailure();
                } else {
                    guestAuthenticationStrategy.onSuccess();
                }
            }
        });

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());
                boolean permitted = userAuthenticationStrategy.authenticate(username, password);
                if (!permitted) {
                    userAuthenticationStrategy.onFailure();
                } else {
                    userAuthenticationStrategy.onSuccess();
                }
            }
        });

        cancelButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });

        homepageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        homepageLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Util.launchBrowser("https://jmars.mars.asu.edu");
            }
        });

        registerLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        registerLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Util.launchBrowser("https://jmars.mars.asu.edu/index.php?q=user/register");
            }
        });


        boolean guestsAllowed = Config.get("guestlogin", "yes").endsWith("yes");
        if (!guestsAllowed) {
            continueButton.setEnabled(false);
            guestBlurbPane.setText("Guest users are not permitted");
        }

        setTitle(Config.get(Util.getProductBodyPrefix() + "edition"));
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        pack();
        setResizable(false);
        setVisible(false);

        guestBlurbPane.setForeground(Color.DARK_GRAY);
        usernameField.requestFocus();
        getRootPane().setDefaultButton(loginButton);
    }

    private void createUIComponents() {

        String version = Util.getVersionNumber();
        ImageIcon logo;

        try {
            logo = new ImageIcon(ImageIO.read(new URL(Config.get("loginLogoUrl"))));
            logoLabel = new JLabel(logo);
        } catch (Exception e) {
            DebugLog.instance().aprintln(e);
            logoLabel = new JLabel("Welcome to " + Config.get(Util.getProductBodyPrefix() + "edition"));
        }

        versionLabel = new JLabel("Version: " + version);
    }

    boolean restoreAutosaveSelected() {
        return restoreAutoSaveCheckBox.isSelected();
    }

    void setUsername(String username) {
        usernameField.setText(username);
    }

    void setGuestAuthenticationStrategy(AuthenticationStrategy strategy) {
        guestAuthenticationStrategy = strategy;
    }

    void setUserAuthenticationStrategy(AuthenticationStrategy strategy) {
        userAuthenticationStrategy = strategy;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.weightx = 1.0;
        panel1.add(panel2, gbc);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), "Guest"));
        guestBlurbPane = new JTextPane();
        guestBlurbPane.setEditable(false);
        guestBlurbPane.setText("Continuing as guest means \nyou will not have access to \nall of the features of JMars");
        guestBlurbPane.putClientProperty("JEditorPane.honorDisplayProperties", Boolean.TRUE);
        panel2.add(guestBlurbPane, BorderLayout.NORTH);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.add(panel3, BorderLayout.SOUTH);
        continueButton = new JButton();
        continueButton.setText("Continue");
        panel3.add(continueButton);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        panel1.add(versionLabel, gbc);
        logoLabel.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        panel1.add(logoLabel, gbc);
        restoreAutoSaveCheckBox = new JCheckBox();
        restoreAutoSaveCheckBox.setText("Restore Auto-Save");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        panel1.add(restoreAutoSaveCheckBox, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        panel1.add(panel4, gbc);
        panel4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Registered User"));
        registerLabel = new JLabel();
        registerLabel.setForeground(new Color(-16348929));
        registerLabel.setText("<HTML><U>Register</U></HTML>");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.insets = new Insets(0, 0, 3, 0);
        panel4.add(registerLabel, gbc);
        final JLabel label1 = new JLabel();
        label1.setHorizontalTextPosition(2);
        label1.setText("Username  ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        panel4.add(label1, gbc);
        usernameField = new JTextField();
        usernameField.setColumns(9);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 3, 0);
        panel4.add(usernameField, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Password  ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        panel4.add(label2, gbc);
        passwordField = new JPasswordField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 3, 0);
        panel4.add(passwordField, gbc);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        panel4.add(panel5, gbc);
        loginButton = new JButton();
        loginButton.setText("Login");
        panel5.add(loginButton);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel6, gbc);
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        panel6.add(cancelButton);
        homepageLabel = new JLabel();
        homepageLabel.setForeground(new Color(-14774017));
        homepageLabel.setText("<HTML><U>JMars Website</U></HTML>");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.insets = new Insets(0,0,5,0);
        panel1.add(homepageLabel, gbc);
        getContentPane().add(panel1);
    }
}


interface AuthenticationStrategy
{
    boolean authenticate(String username, String password);
    void onSuccess();
    void onFailure();
}